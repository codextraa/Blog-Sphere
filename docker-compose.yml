name: sphere

secrets:
  infisical_token:
    file: ./infisical_token.txt
  .infisical.json:
    file: ./.infisical.json

services:
  sphere-backend:
    container_name: sphere-backend
    build: ./backend
    image: sphere-backend:Python-3.12-slim-D
    ports:
      - "8003:8000"
    secrets:
      - infisical_token
      - .infisical.json
    entrypoint: /app/run.sh
    volumes:
      - backend-static:/app/static
      - backend-media:/app/media 
    depends_on:
      sphere-redis:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - ./backend/.gitignore
            - ./backend/run.sh
            - ./backend/core_db/migrations
            - ./backend/backend/*.pyc
            - ./backend/backend/__pycache__
            - ./backend/core_db/*.pyc
            - ./backend/core_db/__pycache__
            - ./backend/backend_api/*.pyc
            - ./backend/backend_api/__pycache__
        - action: rebuild
          path: ./backend/requirements.txt
    networks:
      - web-app-network

  sphere-frontend:
    container_name: sphere-frontend
    build: ./frontend
    image: sphere-frontend:Node-20-alpine-D
    volumes:
      - frontend_node_modules:/app/node_modules
    ports:
      - "3003:3000"
    secrets:
      - infisical_token
      - .infisical.json
    entrypoint: /app/run.sh
    extra_hosts:
      - "sphere.dev:host-gateway"
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
          ignore:
            - ./frontend/node_modules
            - ./frontend/.next
            - ./frontend/.gitignore
            - ./frontend/run.sh
        - action: rebuild
          path: ./frontend/package.json
    networks:
      - web-app-network

  sphere-redis:
    build: ./redis
    container_name: sphere-redis
    image: sphere-redis:Redis-7.4.2-alpine-D
    volumes:
      - redis-data:/data
    ports:
      - "6382:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - web-app-network

volumes:
  backend-static:
  backend-media:
  frontend_node_modules:
  redis-data:

networks:
  web-app-network:
    external: true